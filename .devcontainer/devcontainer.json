{
  "name": "Secure MPC Transformer Inference",
  "dockerComposeFile": "docker-compose.yml",
  "service": "dev",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",

  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "username": "vscode",
      "userUid": 1000,
      "userGid": 1000,
      "upgradePackages": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "moby": true,
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        // Python development
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "charliermarsh.ruff",
        "ms-python.pylint",
        
        // CUDA/C++ development
        "ms-vscode.cpptools",
        "ms-vscode.cmake-tools",
        "nvidia.nsight-vscode-edition",
        
        // DevOps and containers
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "redhat.vscode-yaml",
        
        // Git and collaboration
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "github.copilot",
        
        // Documentation
        "yzhang.markdown-all-in-one",
        "davidanson.vscode-markdownlint",
        "bierner.markdown-mermaid",
        
        // Security
        "ms-python.bandit",
        "piotrpalarz.vscode-gitignore-generator",
        
        // Productivity
        "ms-vscode.vscode-json",
        "tamasfe.even-better-toml",
        "redhat.vscode-xml",
        "formulahendry.code-runner",
        "ms-vscode.hexeditor"
      ],
      
      "settings": {
        // Python configuration
        "python.defaultInterpreterPath": "/opt/conda/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.banditEnabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length=88"],
        "python.sortImports.args": ["--profile", "black"],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],
        
        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true,
          "source.fixAll.ruff": true
        },
        "editor.rulers": [88, 100],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "editor.trimAutoWhitespace": true,
        
        // Files settings
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true,
          "**/.coverage": true,
          "**/htmlcov": true,
          "**/.git": false
        },
        "files.watcherExclude": {
          "**/__pycache__/**": true,
          "**/.pytest_cache/**": true,
          "**/.mypy_cache/**": true
        },
        
        // Terminal configuration
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        },
        
        // Security settings
        "git.autofetch": false,
        "git.confirmSync": true,
        "extensions.ignoreRecommendations": false,
        
        // Language-specific settings
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          }
        },
        "[cuda-cpp]": {
          "editor.defaultFormatter": "ms-vscode.cpptools"
        },
        "[dockerfile]": {
          "editor.defaultFormatter": "ms-azuretools.vscode-docker"
        },
        "[yaml]": {
          "editor.defaultFormatter": "redhat.vscode-yaml"
        },
        "[json]": {
          "editor.defaultFormatter": "vscode.json-language-features"
        },
        "[markdown]": {
          "editor.defaultFormatter": "yzhang.markdown-all-in-one",
          "editor.wordWrap": "on"
        }
      }
    }
  },

  "forwardPorts": [
    8080,   // Main application
    8888,   // Jupyter
    9090,   // Prometheus
    3000,   // Grafana
    50051,  // gRPC service
    6006    // TensorBoard
  ],

  "portsAttributes": {
    "8080": {
      "label": "MPC Inference API",
      "onAutoForward": "notify"
    },
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "ignore"
    },
    "9090": {
      "label": "Prometheus",
      "onAutoForward": "ignore"
    },
    "3000": {
      "label": "Grafana",
      "onAutoForward": "ignore"
    }
  },

  "postCreateCommand": "bash .devcontainer/post-create.sh",
  "postStartCommand": "bash .devcontainer/post-start.sh",

  "remoteUser": "vscode",
  "containerUser": "vscode",

  "mounts": [
    // GPU access
    "type=bind,source=/dev,target=/dev",
    // Docker socket
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    // SSH keys
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
    // Git config
    "source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached"
  ],

  "runArgs": [
    "--gpus=all",
    "--shm-size=2g",
    "--ulimit", "memlock=-1",
    "--ulimit", "stack=67108864"
  ]
}