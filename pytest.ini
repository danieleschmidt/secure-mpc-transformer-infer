[tool:pytest]
# Pytest configuration for secure MPC transformer testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --strict-markers
    --strict-config
    --tb=short
    --cov=secure_mpc_transformer
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=85
    --durations=10
    --maxfail=5

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    gpu: marks tests as requiring GPU (select with '--gpu')
    integration: marks tests as integration tests
    security: marks tests as security-focused
    benchmark: marks tests as benchmarks (select with '--benchmark')
    protocol: specify MPC protocol for test
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    performance: marks tests as performance tests
    stress: marks tests as stress tests
    regression: marks tests as regression tests

# Minimum Python version
minversion = 3.10

# Test timeout (in seconds)
timeout = 300

# Parallel execution
#addopts = -n auto  # Uncomment to enable parallel testing with pytest-xdist

# Coverage options
[coverage:run]
source = src/secure_mpc_transformer
omit = 
    */tests/*
    */test_*
    */__init__.py
    */conftest.py
    */setup.py
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @overload

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml