name: Bio-Enhanced SDLC Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  bio-quality-gates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Bio-Quality Gates
        run: python bio_comprehensive_quality_gates.py
        
      - name: Upload Quality Report
        uses: actions/upload-artifact@v4
        with:
          name: quality-gates-report
          path: bio_quality_gates_report_*.json
          
  bio-testing:
    runs-on: ubuntu-latest
    needs: bio-quality-gates
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Comprehensive Test Suite
        run: python bio_comprehensive_test_suite.py
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: bio_test_results_*.json
          
  security-scan:
    runs-on: ubuntu-latest
    needs: bio-testing
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Bio-Security Analysis
        run: python -c "
import asyncio
import sys
sys.path.append('src')
from secure_mpc_transformer.bio.defensive_security_system import DefensiveSecuritySystem
async def scan():
    security = DefensiveSecuritySystem({})
    results = await security.comprehensive_security_scan()
    print(f'Security scan completed: {results}')
asyncio.run(scan())
        "
        
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [bio-quality-gates, bio-testing, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.0.0
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=1.0.0
            org.opencontainers.image.title=Bio-Enhanced Secure MPC Transformer
            
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          # kubectl apply -f k8s/staging/
          
      - name: Run Bio-Evolution Tests
        run: python bio_generation_2_robust_demo.py
        
      - name: Deploy to Production
        if: success()
        run: |
          echo "Deploying to production environment..."
          # kubectl apply -f k8s/production/
