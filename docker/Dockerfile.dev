# Development-focused Docker image with all tools and dependencies
# Based on the development stage of the CPU Dockerfile

FROM python:3.10-slim

# Metadata
LABEL org.opencontainers.image.title="Secure MPC Transformer (Development)"
LABEL org.opencontainers.image.description="Development container with all tools for secure MPC transformer development"
LABEL org.opencontainers.image.source="https://github.com/yourusername/secure-mpc-transformer"

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    pkg-config \
    git \
    wget \
    curl \
    vim \
    htop \
    tree \
    jq \
    libssl-dev \
    libffi-dev \
    libprotobuf-dev \
    protobuf-compiler \
    ssh-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Security: Create non-root user with sudo access for development
RUN groupadd --gid 1000 developer && \
    useradd --uid 1000 --gid 1000 --create-home --shell /bin/bash developer && \
    apt-get update && apt-get install -y sudo && \
    echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /workspace

# Install Python development tools
RUN pip install --upgrade pip setuptools wheel && \
    pip install \
    pre-commit \
    black \
    ruff \
    mypy \
    pytest \
    pytest-cov \
    pytest-benchmark \
    jupyter \
    jupyterlab \
    ipdb \
    ipython \
    notebook \
    matplotlib \
    seaborn \
    pandas \
    requests \
    httpx

# Install project dependencies
COPY pyproject.toml README.md ./
RUN pip install -e ".[dev,benchmark]"

# Switch to non-root user
USER developer

# Configure Git (can be overridden with build args)
ARG GIT_USER_NAME="Developer"
ARG GIT_USER_EMAIL="developer@example.com"
RUN git config --global user.name "${GIT_USER_NAME}" && \
    git config --global user.email "${GIT_USER_EMAIL}" && \
    git config --global init.defaultBranch main

# Install user-level development tools
RUN pip install --user \
    jupyterlab-git \
    jupyterlab-lsp \
    python-lsp-server[all]

# Create directories for development
RUN mkdir -p /home/developer/.jupyter \
    /home/developer/.local/share/jupyter/lab \
    /home/developer/notebooks \
    /home/developer/experiments

# Jupyter configuration
RUN jupyter lab --generate-config && \
    echo "c.ServerApp.ip = '0.0.0.0'" >> /home/developer/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.open_browser = False" >> /home/developer/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.token = ''" >> /home/developer/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.password = ''" >> /home/developer/.jupyter/jupyter_lab_config.py

# Expose ports for development services
EXPOSE 8888 8000 5000 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; print(f'Python {sys.version}')" || exit 1

# Default command
CMD ["bash", "-c", "jupyter lab --ip=0.0.0.0 --port=8888 & tail -f /dev/null"]